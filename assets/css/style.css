/* So for this project I didn't use a CSS reset or normalize because I feel like this project was fairly simple and small and 
the reset settings I have provided below are completely perfect for my project needs. And I also didn't use it because I never knew 
what CSS reset and normalize files were for before joining this class, because for my previous programming classes, I never used the 
CSS reset or normalize and I was never introduced to them. So I decided to just use the simple reset settings to make my life a bit easier 
for this project. */
/* added a reset, made it so that for everthing we want to set the margin and padding to zero and set the 
box sizing to border box. */
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
	line-height: 1.5;
	background:rgb(80, 80, 80);
}

a {
	color: rgb(0, 0, 0);
	text-decoration: none;
}

ul {
	margin-left: 1.3em;
	margin-bottom: 1.3em;
	color: #fff;
}

p {
	margin: 1rem 0;
	color: #fff;
}

img {
	width: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
	margin-bottom: .55rem;
	line-height: 1.3;
	color: #fff;
	font-size: 2rem;
}

.links {
	color: rgb(251, 255, 0);
}

.backtop{
	color:rgb(251, 255, 0);
}

/* For making the paragraphs readable using proper measurements*/
.entrycontent {
	max-width: 1000px;
	margin: 0 auto 30px;
}

/* Utility */
.container {
	max-width: 1800px;
	margin: auto;
	padding: 0 2rem;
	overflow: hidden;
}
/* ---------------------------------------------- */

.btn {
	display: inline-block;
	border: none;
	color: #fff;
	padding: 0.5rem 1.5rem;
}

.btn-primary {
	background: rgb(140, 0, 255);
}

.btn-block {
	display: block;
	width: 100%;
	text-align: center;
}

.btn:hover {
	opacity: 0.9;
}

.card {
	background: rgb(0, 0, 0);
	padding: 1rem;
}

/* created this class to give the section, home articles some padding on the top and the bottom from the showcase (header) and footer. 
Basically a class for padding.*/
.articles {
	padding: 2rem 0;
}


/* Inner page grid container */
.page-container {
	margin: 2rem 0;
}

/* Navigation */
nav {
	position: sticky;
	top: 0;
	z-index: 1000;
	height: 100px;
	background: rgb(0, 0, 0);
	padding: 0 20px;
}

.fas {
	color: white;
}

.fa-times{
	color: black;
}

.logo {
	width: 150px;
	height: 150px;
	overflow: hidden;
	line-height: 100px;
	float: left;
	text-transform: uppercase;
  	font-size: 16px;
	color: #fff;  
}

.menu {
	float: right;
	line-height: 100px;
}

.menu a {
	color: #ffffff;
	text-transform: uppercase;
	text-decoration: none;
	padding: 0 10px;
	transition: 0.4s;
}

.show-menu-btn,
.hide-menu-btn {
	transition: 0.4s;
	font-size: 30px;
	cursor: pointer;
	display: none;
}

nav ul a.current {
	background: rgb(140, 0, 255);
	color: #fff;
}

.show-menu-btn {
	float: right;
}

.show-menu-btn i {
	line-height: 100px;
}

.menu a:hover{
	background-color: rgb(140, 0, 255);
}

#chk {
	position: absolute;
	visibility: hidden;
	z-index: -1111;
}

/* Showcase */
/* So for actual showcase I wanted the background to be dark.
So I set the color to black and added padding of 2 rem all around and I made the position
relative. And that's important because the before sudo selector is gonna be postion absolute. 
I did that because if you position something absolute it is positioned inside of the first relative
container so I want that to be my showcase. */
#showcase {
	color: #fff;
	background: #000000;
	padding: 2rem;
	position: relative;
}

/* Now when used before and after I want to put in the content, I'm not actually inserting content, so I'm going to 
leave that blank. And then I added a background image here, then I postioned this as absolute because I'm basically 
laying this on top of the showcase. So i made it so position absolute, start at the top, the left to 0 and then I wanted the 
width to go all the way across and the height to all the way (so 100%). And I wanted to make it transparent so i added some opacity. 
So now I can see the image has an overlay or it's not really an overlay on the image. It's basically the image you can see through 
it to the dark, that's bascially what's happening. Can also see through the text right now but that gets fixed in the .showcase-content
class below by adding a z-index of 1. */
#showcase:before {
	content: "";
	background: url('../img/churchill-house-46.jpg') no-repeat center center/cover;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	opacity: 0.4;
}

/* For showcase container I want to display it as a grid. And then I added grid-template-columns, i wanted to take up half the space basically so
 going to repeat 2 times and one fr, because I want it to be a two column grid even though I only have one item which is fine, 
 it should just still make room for just an empty item basically. */
#showcase .showcase-container {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	justify-content: center;
	align-items: center;
	height: 72vh;
}

/* So basically the image is on the top of the text and I used z index here to fix that because z index takes care of 
what displays first. And basically the order of what is on top of what. So what I did was choose the showcase-content which
wraps all the text and added a z index of one. And then that fixed the issue, the text becomes clearer and appears on top of the image. */
#showcase .showcase-content {
	z-index: 1;
}

#showcase .showcase-content p {
	margin-bottom: 1rem;
}

/* Home Articles */
/* I added a class called articles-container, and that's what I want to set the grid on. That's going to be the grid parent.
And then as far as the template columns I'm going to say grid template columns and set repeat to 3 and 1fr, this sets the 
the articles 3 in a row. And I also want spacing in between the articles so I added grid gap of 1rem. */
#home-articles .articles-container {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-gap: 1rem;
}

/* So I added this to style the 'CHURCHILL HOUSE' and 'ROBIN BOYD FOUNDATION' articles, like I mentioned in the html comments, turn the 'CHURCHILL HOUSE'
and 'ROBIN BOYD FOUNDATION' articles into their own grid and then span it over 2, to give it a little bit of style. So I grabbed onto the 'CHURCHILL HOUSE' and 
'ROBIN BOYD FOUNDATION' article without giving it a special class by using first child and last child. first child for the 'CHURCHILL HOUSE' article and 
last child for the 'ROBIN BOYD FOUNDATION' article. To make it more flexiable I used the asterisk * meaning any element, doesn't have to be an article tag
but I only want the direct child so I used the greater than (>), so what I'm saying here is if we changed the article tag to div, we're still going to target the
first element in the articles container and only the first one, here I'm talking about the first child. But for last child if we changed the article tag to div, we're 
still going to target the last element in the articles container and only the last one. */
/* I added grid template columns and I set it to repeat 2, 1fr. So we want basically the image is going to be in 1fr, and the div with the text will be in 1fr. And with 
grid gap. So what I've done here is, I've turned the 'CHURCHILL House' article - first child and 'ROBIN BOYD FOUNDATION' article - last child into a grid and 
I have set it to repeat 2, 1fr with some grid gap, so obivisously it doesn't look good with these settings, so to make it look good, what I did was span the
two articles across ('CHURCHILL HOUSE' and 'ROBYN BOYD FOUNDATION' articles) I wanted it to take up 3 columns, so what I did was add grid-column: 1 / span 3 
and center the image to make it look good. */
#home-articles .articles-container > *:first-child,
#home-articles .articles-container > *:last-child {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 1rem;
	align-items: center;
	grid-column: 1 / span 3;
}

/* Footer */
#main-footer {
	background: black;
	color: #fff;
	padding: 60px 0;
	text-align: center;
}


/* Navigation media queries */
/* Made the max-width: 1024px because I want people with
bigger tablet to also have the hamburger menu, so 
their screen is not cluttered. tablets such as the ipad pro
and also more. */
@media screen and (max-width: 1024px) {
	.show-menu-btn,
	.hide-menu-btn {
		display: block;
	}
	.menu {
		position: fixed;
		width: 100%;
		height: 100vh;
		background: #a1a0a0;
		right: -100%;
		top: 0;
		text-align: center;
		padding: 80px 0;
		line-height: normal;
		transition: 0.7s;
	}

	.menu a {
		display: block;
		padding: 20px;
	}

	.hide-menu-btn {
		position: absolute;
		top: 40px;
		right: 40px;
	}

	#chk:checked ~ .menu {
		right: 0;
	}

	/* For tablets, I want the articles to be stacked in two columns. */
	/* I want the home articles for tablet to be in two columns, so I set the grid template columns to repeat(2, 1fr), where as in 
	my desktop version I had it set to repeat(3,1fr), where the home articles were stacked in three columns. */
	#home-articles .articles-container {
		grid-template-columns: repeat(2, 1fr);
	}

	/* To make my website look good on tablet, I decided to get rid of the spans from the first child and last child. 
	'CHURCHILL HOUSE' article - first child, 'ROBYN BOYD FOUNDATION' - last child, because the applied spans look inappropriate 
	 for the tablet view. */
	/* I grabbed the first and last child and I set grid-template-columns because remember from above code, the first and the last are 
	 also grids, and before they had grid template columns of repeat(2, 1fr), but for tablet I just want to set it to a single column, so I
	 did grid-template-columns: 1fr. */
	/* Now I did grid-column: 1 to clear the span, so now what this everything should do is, for the 'CHURCHILL HOUSE' article and 
	 'ROBYN BOYD FOUNDATION' article, it will put the image up top of the article text contnet for the first child and last child. */
	#home-articles .articles-container > *:first-child,
	#home-articles .articles-container > *:last-child {
		grid-template-columns: 1fr;
		grid-column: 1;
	}
}

@media (max-width: 600px) {
	/* Stack Grid Items */
	/* So for mobile phones, I want the articles to be stacked in one column. And also from the above code for the desktop version 
	the showcase container was set to grid-template-columns: repeat(2,1fr), but for the mobile phone version I just want it to set 
	to 1fr, this will put the showcase content all the way across for the mobile version. and setting grid-template-columns to 1fr also
	stacks the home articles in one column. */
	#showcase .showcase-container,
	#home-articles .articles-container {
		grid-template-columns: 1fr;
	}

	.page-container {
		text-align: center;
	}
}